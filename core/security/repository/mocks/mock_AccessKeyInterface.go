// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cde/go-example/core/security/repository (interfaces: AccessKeyInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockAccessKeyInterface is a mock of AccessKeyInterface interface.
type MockAccessKeyInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAccessKeyInterfaceMockRecorder
}

// MockAccessKeyInterfaceMockRecorder is the mock recorder for MockAccessKeyInterface.
type MockAccessKeyInterfaceMockRecorder struct {
	mock *MockAccessKeyInterface
}

// NewMockAccessKeyInterface creates a new mock instance.
func NewMockAccessKeyInterface(ctrl *gomock.Controller) *MockAccessKeyInterface {
	mock := &MockAccessKeyInterface{ctrl: ctrl}
	mock.recorder = &MockAccessKeyInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccessKeyInterface) EXPECT() *MockAccessKeyInterfaceMockRecorder {
	return m.recorder
}

// Decrypt mocks base method.
func (m *MockAccessKeyInterface) Decrypt(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Decrypt", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Decrypt indicates an expected call of Decrypt.
func (mr *MockAccessKeyInterfaceMockRecorder) Decrypt(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Decrypt", reflect.TypeOf((*MockAccessKeyInterface)(nil).Decrypt), arg0, arg1)
}

// Encrypt mocks base method.
func (m *MockAccessKeyInterface) Encrypt(arg0 context.Context, arg1 time.Time) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Encrypt", arg0, arg1)
	ret0, _ := ret[0].(string)
	return ret0
}

// Encrypt indicates an expected call of Encrypt.
func (mr *MockAccessKeyInterfaceMockRecorder) Encrypt(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Encrypt", reflect.TypeOf((*MockAccessKeyInterface)(nil).Encrypt), arg0, arg1)
}
